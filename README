Have you ever struggled with whether to create a 1 to 1 relationship between two model classes or just lump all the attributes into one model? 

Consider an example: People and Genomes. Each Person has their own unique Genome, which no one else shares (even identical twins have base pair mutations relative to one another). So you could put all the data in the People table. Yet it feels wierd to lump methods like 'contains_dna_repeat_sequence?(x)' in with the Person class.

In database land, 1 to 1 relationship are suspect. They indicate the potential for normalizing the data by combining the columns into one table, and thus avoiding frequent joins.
In object oriented land, 1 to 1 relationship are a natural way to separate concerns.

This plugin gives you the best of both worlds. It allows you to add the attributes of both classes into one table, and then use the classes like a normal 1 to 1 relationship.


Sometimes you may want to have a 1 to 1 relationship for security reasons. For instance, you may want to separate a User object from it's Login or CreditCard objects. Don't use this plugin in that case.
